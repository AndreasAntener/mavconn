/** THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MODIFY
 * BY HAND!!
 *
 * Generated by lcm-gen
 **/

#include <stdint.h>
#include <stdlib.h>
#include <lcm/lcm_coretypes.h>
#include <lcm/lcm.h>

#ifndef _gl_overlay_message_t_h
#define _gl_overlay_message_t_h

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _gl_overlay_message_t gl_overlay_message_t;
struct _gl_overlay_message_t
{
    char*      name;
    int8_t     coordinate_frame_type;
    double     origin_x;
    double     origin_y;
    double     origin_z;
    int64_t    length;
    int8_t     *data;
};
 
gl_overlay_message_t   *gl_overlay_message_t_copy(const gl_overlay_message_t *p);
void gl_overlay_message_t_destroy(gl_overlay_message_t *p);

typedef struct _gl_overlay_message_t_subscription_t gl_overlay_message_t_subscription_t;
typedef void(*gl_overlay_message_t_handler_t)(const lcm_recv_buf_t *rbuf, 
             const char *channel, const gl_overlay_message_t *msg, void *user);

int gl_overlay_message_t_publish(lcm_t *lcm, const char *channel, const gl_overlay_message_t *p);
gl_overlay_message_t_subscription_t* gl_overlay_message_t_subscribe(lcm_t *lcm, const char *channel, gl_overlay_message_t_handler_t f, void *userdata);
int gl_overlay_message_t_unsubscribe(lcm_t *lcm, gl_overlay_message_t_subscription_t* hid);

int  gl_overlay_message_t_encode(void *buf, int offset, int maxlen, const gl_overlay_message_t *p);
int  gl_overlay_message_t_decode(const void *buf, int offset, int maxlen, gl_overlay_message_t *p);
int  gl_overlay_message_t_decode_cleanup(gl_overlay_message_t *p);
int  gl_overlay_message_t_encoded_size(const gl_overlay_message_t *p);

// LCM support functions. Users should not call these
int64_t __gl_overlay_message_t_get_hash(void);
int64_t __gl_overlay_message_t_hash_recursive(const __lcm_hash_ptr *p);
int     __gl_overlay_message_t_encode_array(void *buf, int offset, int maxlen, const gl_overlay_message_t *p, int elements);
int     __gl_overlay_message_t_decode_array(const void *buf, int offset, int maxlen, gl_overlay_message_t *p, int elements);
int     __gl_overlay_message_t_decode_array_cleanup(gl_overlay_message_t *p, int elements);
int     __gl_overlay_message_t_encoded_array_size(const gl_overlay_message_t *p, int elements);
int     __gl_overlay_message_t_clone_array(const gl_overlay_message_t *p, gl_overlay_message_t *q, int elements);

#ifdef __cplusplus
}
#endif

#endif
