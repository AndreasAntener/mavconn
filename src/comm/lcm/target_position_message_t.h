/** THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MODIFY
 * BY HAND!!
 *
 * Generated by lcm-gen
 **/

#include <stdint.h>
#include <stdlib.h>
#include <lcm/lcm_coretypes.h>
#include <lcm/lcm.h>

#ifndef _target_position_message_t_h
#define _target_position_message_t_h

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _target_position_message_t target_position_message_t;
struct _target_position_message_t
{
    double     x;
    double     y;
};
 
target_position_message_t   *target_position_message_t_copy(const target_position_message_t *p);
void target_position_message_t_destroy(target_position_message_t *p);

typedef struct _target_position_message_t_subscription_t target_position_message_t_subscription_t;
typedef void(*target_position_message_t_handler_t)(const lcm_recv_buf_t *rbuf, 
             const char *channel, const target_position_message_t *msg, void *user);

int target_position_message_t_publish(lcm_t *lcm, const char *channel, const target_position_message_t *p);
target_position_message_t_subscription_t* target_position_message_t_subscribe(lcm_t *lcm, const char *channel, target_position_message_t_handler_t f, void *userdata);
int target_position_message_t_unsubscribe(lcm_t *lcm, target_position_message_t_subscription_t* hid);

int  target_position_message_t_encode(void *buf, int offset, int maxlen, const target_position_message_t *p);
int  target_position_message_t_decode(const void *buf, int offset, int maxlen, target_position_message_t *p);
int  target_position_message_t_decode_cleanup(target_position_message_t *p);
int  target_position_message_t_encoded_size(const target_position_message_t *p);

// LCM support functions. Users should not call these
int64_t __target_position_message_t_get_hash(void);
int64_t __target_position_message_t_hash_recursive(const __lcm_hash_ptr *p);
int     __target_position_message_t_encode_array(void *buf, int offset, int maxlen, const target_position_message_t *p, int elements);
int     __target_position_message_t_decode_array(const void *buf, int offset, int maxlen, target_position_message_t *p, int elements);
int     __target_position_message_t_decode_array_cleanup(target_position_message_t *p, int elements);
int     __target_position_message_t_encoded_array_size(const target_position_message_t *p, int elements);
int     __target_position_message_t_clone_array(const target_position_message_t *p, target_position_message_t *q, int elements);

#ifdef __cplusplus
}
#endif

#endif
